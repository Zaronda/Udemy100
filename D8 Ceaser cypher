alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

#   alphabet twice for shifts past the end of letters

direction = input("Type 'encode' to encrypt, type 'decode' to decrypt:\n")
text = input("Type your message:\n").lower()
shift = int(input("Type the shift number:\n"))

#function called 'encrypt' that takes the 'text' and 'shift' as inputs.
# if the shift number is greater than 26, use modulo % 26 and use remainder as shift number
# these two functions can be combined as one with some extra parameter use eg "{direction}d"
def encrypt(plain_text, shift_amount):
    cypher_text = ""
    for letter in plain_text:
        position = alphabet.index(letter)
        new_position = position + shift_amount
        new_letter = alphabet[new_position]
        cypher_text += new_letter
    print(f"The encoded text is {cypher_text}.")

# decypt 
def decrypt(cypher_text, shift_amount):
    decypher_text = ""
    for letter in cypher_text:
        position = alphabet.index(letter)
        new_position = position - shift_amount
        if new_position < 0:
            new_position = new_position + 26 
        new_letter = alphabet[new_position]
        decypher_text += new_letter
    print(f"The decoded text is {decypher_text}.")

if direction == "encode":
    encrypt(plain_text=text, shift_amount=shift)
elif direction == "decode":
    decrypt(plain_text=text, shift_amount=shift)

# can ask if want to continue and use while loop